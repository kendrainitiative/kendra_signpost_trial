<?php

include_once('kendra_upload.features.inc');

function kendra_upload_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
	switch ($op) {
		case 'insert':
		case 'update':
			if ($node->type == 'kendra_import') {
				if (module_exists('krumo')
				&& 	(($handle = fopen($node->field_upload_file[0]['filepath'], 'r')) !== FALSE)
				) {
					// debug: process immediately
					_kendra_upload_process_csv($node->nid);
				} else {
					job_queue_add('_kendra_upload_process_csv',
	          "Process the uploaded file for node {$node->nid}",
					array($node->nid),
	          '', TRUE);
				}
			}
			break;
		case 'view':
			if ($node->type == 'kendra_import') {
				$graph = url("node/{$node->nid}", array('absolute' => TRUE));
				$result = kendra_rdf_send("SELECT * FROM <{$graph}> WHERE {?s ?p ?o}");
				$node->content['sparql_result'] = array(
          '#value' => $result->data,
				);
			}
			break;
	}
}

function array_trim(&$value, $key) {
	$value = trim($value);
}

function _kendra_upload_process_csv($nid) {
	$node = node_load($nid);

	if (($handle = fopen($node->field_upload_file[0]['filepath'], 'r')) !== FALSE) {
		$headers = fgetcsv($handle, 1000, ',', '"');

		// remove whitespace from column headers
		array_walk($headers, 'array_trim');
		
		$row = 1;
		$graph = url("node/{$nid}", array('absolute' => TRUE));
		$query = "";
		$triples = "";

		while (($data = fgetcsv($handle, 1000, ',', '"')) !== FALSE) {
			foreach ($data as $key => $value) {
				if (!empty($value)) {
					$row_uri = $graph ."/rows#{$row}";
					$relation = $graph .'/relation#'. urlencode($headers[$key]);
					// Encode value as a string
					$triples .= "\n<{$row_uri}> <{$relation}> \"". addslashes($value) ."\" .\n";
				}
			}

			// creation of cat nodes for solr testing
			$data['source_nid'] = $nid;
			$data['source_row'] = $row;
			_kendra_uploads_add_cat_node($headers, $data);

			$row++;
		}

		if ($triples != "") {
			//$response = kendra_rdf_send("DROP GRAPH <{$graph}> ");
			$response = kendra_rdf_send("CLEAR GRAPH <{$graph}> ");
			$response = kendra_rdf_send("CREATE GRAPH <{$graph}> ");
			$query = "INSERT DATA INTO GRAPH <{$graph}> \n{ {$triples} }";
			
			$response = kendra_rdf_insert($graph, $triples);
		}
	}
	fclose($handle);
}


function _kendra_uploads_add_cat_node($headers, $data) {
	// Check for kendra_cat module, and if it exists pass the data
	// for creation of kendra catalogue node. This is only to be
	// used during testing of apachesolr module.
	if (function_exists('kendra_cat_add_node')) {
		kendra_cat_add_node($headers, $data);
	} else {
		// kendra_cat module not enabled, do nothing.
	}
}

/**
 * tell Solr to index imported content
 * see http://www.forumone.com/blogs/post/getting-real-search-apache-solr-drupal
 */
function kendra_upload_apachesolr_update_index(&$doc, $node) {
	if (!empty($node->content['field_cat_album_value'])) {
		$doc->sm_field_cat_album_value = $node->content['field_cat_album_value'];
		$doc->sm_field_cat_artist_value = $node->content['field_cat_artist_value'];
		$doc->sm_field_cat_date_value = $node->content['field_cat_date_value'];
		$doc->sm_field_cat_isrc_value = $node->content['field_cat_isrc_value'];
		$doc->sm_field_cat_label_value = $node->content['field_cat_label_value'];
		$doc->sm_field_cat_no_value = $node->content['field_cat_no_value'];
		$doc->sm_field_cat_publisher_value = $node->content['field_cat_publisher_value'];
	}
}
